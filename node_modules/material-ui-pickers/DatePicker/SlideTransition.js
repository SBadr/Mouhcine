"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _reactAddonsCssTransitionGroup = _interopRequireDefault(require("react-addons-css-transition-group"));

var animationDuration = 350;

var SlideTransition = function SlideTransition(_ref) {
  var classes = _ref.classes,
      className = _ref.className,
      children = _ref.children,
      slideDirection = _ref.slideDirection,
      other = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["classes", "className", "children", "slideDirection"]);
  return _react.default.createElement(_reactAddonsCssTransitionGroup.default, (0, _extends2.default)({
    className: (0, _classnames.default)(classes.transitionContainer, className),
    transitionEnterTimeout: animationDuration,
    transitionLeaveTimeout: animationDuration,
    transitionName: {
      enter: classes["slideEnter-" + slideDirection],
      enterActive: classes.slideEnterActive,
      leave: classes.slideLeave,
      leaveActive: classes["slideLeaveActiveLeft-" + slideDirection]
    }
  }, other), children);
};

SlideTransition.propTypes = {
  classes: _propTypes.default.shape({}).isRequired,
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  slideDirection: _propTypes.default.oneOf(['left', 'right']).isRequired
};
SlideTransition.defaultProps = {
  className: undefined
};

var styles = function styles(theme) {
  var slideTransition = theme.transitions.create('transform', {
    duration: animationDuration,
    easing: 'cubic-bezier(0.35, 0.8, 0.4, 1)'
  });
  return {
    transitionContainer: {
      display: 'block',
      position: 'relative',
      '& > *': {
        position: 'absolute',
        top: 0,
        right: 0,
        left: 0
      }
    },
    'slideEnter-left': {
      willChange: 'transform',
      transform: 'translate(100%)'
    },
    'slideEnter-right': {
      willChange: 'transform',
      transform: 'translate(-100%)'
    },
    slideEnterActive: {
      transform: 'translate(0%)',
      transition: slideTransition
    },
    slideLeave: {
      transform: 'translate(0%)'
    },
    'slideLeaveActiveLeft-left': {
      willChange: 'transform',
      transform: 'translate(-100%)',
      transition: slideTransition
    },
    'slideLeaveActiveLeft-right': {
      willChange: 'transform',
      transform: 'translate(100%)',
      transition: slideTransition
    }
  };
};

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiPickersSlideTransition'
})(SlideTransition);

exports.default = _default;